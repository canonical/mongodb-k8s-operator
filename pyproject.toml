# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

[tool.poetry]
name = "mongodb-k8s"
version = "0.0.1-dev.0"
description = ""
license = "Apache-2.0"
authors = [
    "Mykola Marzhan <mykola.marzhan@canonical.com>"
]
readme = "README.md"
homepage = "https://charmhub.io/mongodb-k8s?channel=6/edge"
repository = "https://github.com/canonical/mongodb-k8s-operator"

[tool.poetry.dependencies]
python = "^3.10.12"
ops = "~2.15.0"
pymongo = "^4.7.3"
tenacity = "^8.2.3"
pyyaml = "^6.0.1"
jinja2 = "^3.1.3"
poetry-core = "^1.9.0"
data-platform-helpers = "^0.1.3"
overrides = "^7.7.0"
lightkube = "^0.15.3"
pyOpenSSL = "^24.2.1"
setuptools = "^72.0.0"

[tool.poetry.group.charm-libs.dependencies]
ops = "~2.15.0"
pydantic = "^1.10.7"  # cos_agent lib
cryptography = "^42.0.5"  # tls_certificates lib v3
jsonschema = "^4.22.0"  # tls_certificates lib v3
cosl = "^0.0.16"  # loki_push_api
pyOpenSSL = "^24.2.1"

[tool.poetry.group.format]
optional = true

[tool.poetry.group.format.dependencies]
black = "^24.4.2"
isort = "^5.13.2"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
flake8 = "^7.0.0"
flake8-docstrings = "^1.7.0"
flake8-copyright = "^0.2.4"
flake8-builtins = "^2.5.0"
pyproject-flake8 = "^7.0.0"
pep8-naming = "^0.13.3"
codespell = "^2.2.6"
shellcheck-py = "^0.10.0.1"
black = "^24.4.2"
isort = "^5.13.2"

[tool.poetry.group.unit.dependencies]
coverage = {extras = ["toml"], version = "^7.5.0"}
pytest = "^8.1.1"
parameterized = "^0.9.0"

[tool.poetry.group.integration.dependencies]
allure-pytest = "^2.13.5"
ops = "~2.15.0"
tenacity = "^8.2.3"
pymongo = "^4.7.3"
parameterized = "^0.9.0"
lightkube = "^0.15.3"
more_itertools = "*"
kubernetes = "^30.1.0"
juju = "^3.5.0"
pytest = "^8.1.1"
pytest-asyncio = "^0.21.1"
pytest-mock = "^3.14.0"
pytest-operator = "^0.36.0"
pytest-operator-cache = {git = "https://github.com/canonical/data-platform-workflows", tag = "v21.0.0", subdirectory = "python/pytest_plugins/pytest_operator_cache"}
pytest-operator-groups = {git = "https://github.com/canonical/data-platform-workflows", tag = "v21.0.0", subdirectory = "python/pytest_plugins/pytest_operator_groups"}
pytest-github-secrets = {git = "https://github.com/canonical/data-platform-workflows", tag = "v21.0.0", subdirectory = "python/pytest_plugins/github_secrets"}
allure-pytest-collection-report = {git = "https://github.com/canonical/data-platform-workflows", tag = "v21.0.0", subdirectory = "python/pytest_plugins/allure_pytest_collection_report"}

[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"

# Testing tools configuration
[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
minversion = "6.0"
log_cli_level = "INFO"
markers = ["unstable"]
asyncio_mode = "auto"

# Formatting tools configuration
[tool.black]
line-length = 99
target-version = ["py310"]

[tool.isort]
profile = "black"

# Linting tools configuration
[tool.flake8]
max-line-length = 99
max-doc-length = 99
max-complexity = 10
exclude = [".git", "__pycache__", ".tox", "build", "dist", "*.egg_info", "venv", "tests/integration/relation_tests/application-charm/lib/", "tests/integration/ha_tests/application_charm/lib/"]
select = ["E", "W", "F", "C", "N", "R", "D", "H"]
# Ignore W503, E501 because using black creates errors with this
# Ignore D107 Missing docstring in __init__
ignore = ["W503", "E501", "D107", "N818"]
# D100, D101, D102, D103: Ignore missing docstrings in tests
per-file-ignores = ["tests/*:D100,D101,D102,D103,D104"]
docstring-convention = "google"
# Check for properly formatted copyright header in each file
copyright-check = "True"
copyright-author = "Canonical Ltd."
copyright-regexp = "Copyright\\s\\d{4}([-,]\\d{4})*\\s+%(author)s"
